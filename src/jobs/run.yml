description: |
  Simple drop-in job to run commands for your Node.js application automatically.

parameters:
  version:
    type: string
    default: "lts"
    description: >
      Pick a specific cimg/node image version tag: https://hub.docker.com/r/cimg/node
  pkg-manager:
    type: enum
    enum: ["npm", "yarn", "yarn-berry"]
    default: "npm"
    description: Select the default node package manager to use.
  cache-version:
    type: string
    default: v1
    description: Change the default cache version if you need to clear the cache for any reason.
  setup:
    type: steps
    description: Provide any optional steps you would like to run prior to installing the node dependencies. This is a good place to install global modules.
    default: []
  npm-run:
    type: string
    default: ""
    description: The name of the script within your package.json which you would like to run.
  yarn-run:
    type: string
    default: ""
    description: The name of the script within your package.json which you would like to run.
  app-dir:
    type: string
    default: "~/project"
    description: Path to the directory containing your package.json file. Not needed if package.json lives in the root.
  override-ci-command:
    description: |
      By default, packages will be installed with "npm ci" or "yarn install --frozen-lockfile".
      Optionally supply a custom package installation command, with any additional flags needed.
    type: string
    default: ""

executor:
  name: default
  tag: << parameters.version >>

steps:
  - checkout
  - steps: << parameters.setup >>
  - install-packages:
      app-dir: <<parameters.app-dir>>
      pkg-manager: <<parameters.pkg-manager>>
      cache-version: <<parameters.cache-version>>
      override-ci-command: <<parameters.override-ci-command>>
  - run:
      name: Run <<parameters.pkg-manager>> <<parameters.npm-run>>
      working_directory: <<parameters.app-dir>>
      command: |
        if [[ "npm" == "<<parameters.pkg-manager>>" ]]; then
          npm run <<parameters.npm-run>>
        else
          yarn run <<parameters.yarn-run>>
        fi
