version: 2.1

orbs:
  node: circleci/node@<<pipeline.parameters.dev-orb-version>>
  orb-tools: circleci/orb-tools@9.0

# Pipeline parameters
parameters:
  # These pipeline parameters are required by the "trigger-integration-tests-workflow"
  # job, by default.
  run-integration-tests:
    type: boolean
    default: false
  dev-orb-version:
    type: string
    default: "dev:alpha"

integration-tests: &integration-tests
  [
    integration-test-install-linux,
    integration-test-install-mac,
    node-test-job,
    integration-test-install-linux-latest
  ]

jobs:
# Install NodeJS into a non-node container.
  integration-test-install-linux:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - node/install:
          node-version: "13.11.0"
          install-yarn: true # Test the install of YARN
      - run:
          command: |
            if ! node --version | grep -q "13"; then
              echo "Node version 13 not found"
              exit 1
            fi

  integration-test-install-linux-latest:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - node/install:
          node-version: "latest"
      - run:
          name: Check that latest NodeJS is installed.
          command: |
            NODE_ORB_INSTALL_VERSION=$(curl -Ls -o /dev/null -w %{url_effective} \
              "https://github.com/nodejs/node/releases/latest" | sed 's:.*/::' | cut -d 'v' -f 2)
            if ! node --version | grep -q "$NODE_ORB_INSTALL_VERSION"; then
              echo "Latest Node version = $NODE_ORB_INSTALL_VERSION"
              echo "Installed version: $(node --version)"
              exit 1
            fi

  integration-test-install-mac:
    macos:
      xcode: 11.4.0
    steps:
      - checkout
      - node/install:
          node-version: "13.11.0"
          install-yarn: true # Test the install of YARN
      - run:
          command: |
            if ! node --version | grep -q "13"; then
              echo "Node version 13 not found"
            fi


workflows:
  # This `lint-pack_validate_publish-dev` workflow will run on any commit.
  lint_pack-validate_publish-dev:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - orb-tools/lint
      # pack your orb YAML files to a single orb.yml
      # validate the orb.yml file to ensure it is well-formed
      - orb-tools/pack

      # release dev version of orb, for testing & possible publishing.
      # orb will be published as dev:alpha and dev:${CIRCLE_SHA1:0:7}.
      # requires a CircleCI API token to be stored as CIRCLE_TOKEN (default)
      # https://circleci.com/docs/2.0/managing-api-tokens
      # store CIRCLE_TOKEN as a project env var or Contexts resource
      # if using Contexts, add your context below
      - orb-tools/publish-dev:
          orb-name: circleci/node
          context: orb-publishing
          requires:
            - orb-tools/pack
            - orb-tools/lint

      # trigger an integration workflow to test the
      # dev:${CIRCLE_SHA1:0:7} version of your orb
      - orb-tools/trigger-integration-tests-workflow:
          name: trigger-integration-dev
          context: orb-publishing
          requires:
            - orb-tools/publish-dev

  # This `integration-tests_prod-release` workflow will only run
  # when the run-integration-tests pipeline parameter is set to true.
  # It is meant to be triggered by the "trigger-integration-tests-workflow"
  # job, and run tests on <your orb>@dev:${CIRCLE_SHA1:0:7}.
  integration-tests_prod-release:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      # your integration test jobs go here: essentially, run all your orb's
      # jobs and commands to ensure they behave as expected. or, run other
      # integration tests of your choosing
      - integration-test-install-linux
      - integration-test-install-mac
      - integration-test-install-linux-latest
      - node/test:
          name: node-test-job
          app-dir: "~/project/sample"
      - orb-tools/dev-promote-prod-from-commit-subject:
          orb-name: circleci/node
          context: orb-publishing
          add-pr-comment: true
          bot-token-variable: GHI_TOKEN
          bot-user: cpe-bot
          fail-if-semver-not-indicated: true
          publish-version-tag: true
          ssh-fingerprints: 2a:2b:49:ea:64:7d:39:4a:58:17:18:17:b2:5c:f6:a8
          requires: *integration-tests
          filters:
            branches:
              only: master
